version: "3.2"
services:

  cloud-front:
    image: ${NGINX_IMAGE}:${NGINX_IMAGE_VER}
    networks:
      - lan
    depends_on:
      - cloud-app
    restart: always
    labels:
      - traefik.enable=true
      - dcape.traefik.tag=${DCAPE_TAG}
      - traefik.http.routers.cloud-front.rule=Host(`${APP_SITE:?Must be set}`)
      - traefik.http.routers.cloud-front.tls=${USE_TLS}
      - traefik.http.routers.cloud-front.tls.certresolver=letsEncrypt
      - traefik.http.middlewares.cloud_redirect.redirectregex.regex=/.well-known/(card|cal)dav
      - traefik.http.middlewares.cloud_redirect.redirectregex.replacement=/remote.php/dav/
      # hsts middleware defined in DCAPE/apps/traefik/docker-compose.inc.yml
      - traefik.http.routers.cloud-front.middlewares=hsts,cloud_redirect
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${APP_ROOT}/data:/var/www/html:ro
      - ${APP_ROOT}/nginx.conf:/etc/nginx/nginx.conf:ro

  cloud-app:
    image: ${IMAGE}:${IMAGE_VER}
    restart: always
    networks:
      - lan
    depends_on:
      - cloud-cache
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${APP_ROOT}/data:/var/www/html
    environment:
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_HOST=db
      - NEXTCLOUD_ADMIN_USER=${USER_NAME}
      - NEXTCLOUD_ADMIN_PASSWORD=${USER_PASS}
      - NEXTCLOUD_TRUSTED_DOMAINS=${APP_SITE}
      - REDIS_HOST=cloud-cache
      - REDIS_HOST_PASSWORD=${REDIS_PASS}

  cloud-cache:
    image: ${REDIS_IMAGE}:${REDIS_IMAGE_VER}
    restart: always
    command: redis-server --requirepass ${REDIS_PASS}
    sysctls:
      net.core.somaxconn: 511
    networks:
      - lan
    volumes:
      - ${APP_ROOT}/redis:/var/lib/redis

networks:
  lan:
    external:
      name: ${DCAPE_NET}
